define({
	 "update.member.info":"更新会员注册信息",
     "expand":"展开详细",
     "expand.all":"展开所有",
     "expl.events":"声明式跨浏览器的事件绑定",
     "expl.events.details":"应用代码无需调用任何浏览器事件API（如W3C Event API），仅仅通过声明即可实现HTML原素响应各种事件。本Demo中的HTML元素<i>显示Demo解释</i>及<i>更改语言（页面会重新加载）</i>分别可以响应<i>click</i>和<i>change</i>事件，这些仅仅通过以下声明即可完成：",
     "expl.events.code.comment":"格式：\"事件名称@HTML元素的选择器表达式\":事件监听器<br/>            HTML元素的选择器表达式遵从CSS所支持的选择器表达式。见：<a href='http://api.jquery.com/category/selectors' target='_blank'>http://api.jquery.com/category/selectors</a><br/>",
     "expl.i18n":"声明式国际化（I18N）支持：支持多语言和按需加载资源文件",
     "expl.i18n.details":"本Demo页面中显示的当前语言的字符串是定义在资源文件中的。这些资源文件是按需加载的，即各个模块只会加载自己所需的资源文件。实现I18N，您无需编写代码，只需要：",
     "expl.i18n.details.step1":"定义资源文件。下面是一个示例资源文件的内容：",
     "expl.i18n.details.step2":"在页面中引用资源文件中定义的字符串。如：",
     "expl.i18n.details.step3":"在模块定义中声明本模块所需加载的资源文件：",
     "expl.css":"声明式CSS文件按需（动态）加载",
     "expl.css.details":"decj支持动态加载模块所需的CSS文件。并且，支持不同的语言设置下加载不同的CSS文件。使用该功能，您无需编写代码，只需在模块定义中声明当前模块所需加载的CSS文件：",
     "expl.css.details.1":"若当前Locale是<i>zh_CN</i>（中国-简体中文），则上述声明会使得相关的CSS文件<i>form-zh_CN.css</i>和<i>decj_zh_CN.css</i>被加载。<br/>如果要加载的CSS文件来自其它的域名，由于多数浏览器其本身不支持用于表示CSS文件加载完毕的相关事件（如onreadystatechange、onload）。decj需要一些特殊的“线索”来判断CSS文件是否加载完成。因此，这种情形下，你必须在外部CSS文件中添加一个特殊的CSS规则。该规则的命名格式为：“#<i>CSS文件的短文件名</i>-Clue\”，且其声明部分应包含“display:none”。比如，有个页面来自“http://www.domain.com“，而CSS文件来自”http://static.domain.com/css/menu.css“，那么需要在CSS文件”menu.css“中添加名为”#menu-Clue“的规则。",
     "expl.js":"声明式Javascript文件按需（动态）加载",
     "expl.js.details":"decj允许你声明JS模块所依赖的其它JS模块。decj并不再造车轮（Reinvent the wheel）,它默认使用RequireJS实现异步方式动态加载Javascript文件。您也可以使decj使用任何符合AMD（Asynchronous Module Definition）规范的Javascript库来实现Javascript文件动态加载。<br/>声明一个模块所依赖的其它模块，只需要在模块定义中调用requires方法：",
     "expl.js.comment":"声明当前模块依赖于\"decj\",\"sha256\"这2个模块，使其能够被动态加载",
     "expl.form":"声明式HTML表单增强：表单内容自动填充、表单数据自动提交（支持JSON）、表单重置增强、表单数据校验、数据格式化",
     "expl.form.fill":"使用JSON自动填充表单内容",
     "expl.form.fill.details":"decj可以根据JSON表示的数据自动对相应的表单进行填充。用于填充表单的JSON数据可以通过您的服务端代码自动生成，或者直接在JS代码中指定。<br/>使用该功能，除了公共的配置，你无需编写代码。",
     "expl.form.submit":"表单数据自动提交（支持JSON）",
     "expl.form.submit.details":"表单中的数据可以由decj自动提交到服务端。所提交的数据默认是JSON格式，同时也支持以传统的方式（即application/x-www-form-urlencoded 编码）提交数据。<br/>使用该功能，除了公共的配置，你只需在表单中添加一个submit按钮或者image按钮，无需编写代码。",
     "expl.form.reset":"表单重置增强",
     "expl.form.reset.details":"HTML中的reset按钮被单击后，表单中的所有元素将会被恢复到其“初始值”。但是，有经验的程序员会发现，如果表单的内容是通过JS的方式填充的（如通过AJAX加载服务端数据，然后将这些数据填充到表单中），这个所谓的“初始值”往往不是我们所期望的。decj增强了reset按钮的功能，使得我们即可以利用服务端提供的数据自动填充表单，又可以使reset按钮被单击后表单的数据可以恢复到服务端最初提供的数据。<br/>使用该功能，除了公共的配置，你只需在表单中添加一个reset按钮，无需编写代码。",
     "expl.form.validate":"表单数据校验",
     "expl.form.validate.details":"表单中的元素在失去焦点后，decj会触发该元素的数据自动校验。<br/>使用该功能，除了公共的配置，你无需编写代码（除非你要编写你自己的校验器）。",
     "expl.form.format":"数据格式化",
     "expl.form.format.details":"表单中的元素在失去焦点后，decj会触发该元素值的自动格式化。目前decj支持日期和数字的自动格式（当然，你也可以扩展）。<br/>使用该功能，除了公共的配置，你无需编写代码（除非你要编写你自己的格式化代码）。",
     "expl.form.cfg":"表单增强功能的所需的公共配置",
     "expl.form.details.extra":"decj完成其表单增强功能，需要您提供有关表单的一些元信息。这些信息包括表单中各个字段的数据类型、数据校验规则和格式化要求，以及关于表单的另外一些元数据。<br/>如本Demo，应用开发者需要为decj提供如下有关表单各个元素的类型等信息（这部分信息可以利用服务端代码自动生成）：",
     "expl.form.details.extra.1":"另外，可以在提供有关表单的其它元数据：",
     "expl.form.code.comment.1":"声明对打包的表单数据进行一些额外处理",
     "expl.form.code.comment.2":"声明表单数据成功提交后会被调用的函数",
     "expl.form.code.comment.3":"声明表单字段的额外数据校验规则",
     "expl.load":"HTML代码/CSS文件/Javascript文件/资源文件并行加载",
     "expl.load.details":"decj是以并发的方式加载模块所需的HTML代码、CSS文件、Javascript文件及资源文件，以提升加载速度。",
     "expl.init":"声明式页面/模块初始化",
     "expl.init.details":"通常在一个模块（或者页面）加载完成后，我们需要编写一些初始化得代码，这些代码可以在模块定义中进行声明：",
     "expl.init.code.comment":"在该函数中编写你的模块初始化代码"
});
